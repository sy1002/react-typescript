name: Run Gemini CLI

on:
  workflow_dispatch:

jobs:
  run-gemini:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Gemini CLI
        run: npm install -g @google/gemini-cli

      - name: Create locales directory
        run: mkdir -p src/locales

      - name: Run Gemini CLI
        id: gemini
        run: |
          echo "I want to extract UI text from my TSX files and generate i18n key-value pairs in English in JSON format. \
          Please follow this key naming convention: use the component file name (without extension) as the prefix, followed by the key name. \
          For example, if the file is components/Login.tsx and the text is 'Click Me!', the key should be 'login.clickMe'. Do not use nested JSON. \
          Return only the final result in valid JSON format, wrapped in triple backticks with the json language identifier, like this: \`\`\`json\n{ ... }\n\`\`\`" | gemini
          # Ensure the output is strictly JSON by forcing the format if necessary
          # (This part depends on specific CLI capabilities; adjust as needed)
          # Example pseudo-command: gemini --output-format json
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Extract and Validate JSON from Gemini output
        run: |
          # Extract JSON part from the output
          OUTPUT=$(echo "${{ steps.gemini.outputs.result }}" | awk '/```json/ {print substr($0, 4)} /```/ {exit}')
          echo "$OUTPUT" > src/locales/generated.json
          echo "✅ Valid JSON saved to src/locales/generated.json"
          # Check if the extracted content is valid JSON
          # if echo "$OUTPUT" | jq . > /dev/null 2>&1; then
          #   # Valid JSON, save to file
          #   echo "$OUTPUT" > src/locales/generated.json
          #   echo "✅ Valid JSON saved to src/locales/generated.json"
          # else
          #   # Invalid JSON, log error and save empty object
          #   echo "{}" > src/locales/generated.json
          #   echo "⚠️ Invalid JSON received from Gemini. Saving empty object."
          # fi
        shell: bash

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add src/locales/generated.json
          git commit -m "Update generated locales" || echo "No changes to commit"
          git push